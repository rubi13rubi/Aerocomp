/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.aerocomp;

import java.io.IOException;
import static java.lang.Thread.sleep;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author alvarocamacho
 */
public class AerocompInterfaz extends javax.swing.JFrame {

    /**
     * Creates new form Aerocomp2
     */
    public AerocompInterfaz() throws InterruptedException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        jPanelMadrid = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cajaTransfersAeropMad = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cajaTransfersCiudadMad = new javax.swing.JTextArea();
        numPasajMad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        hangarMad = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        areaEstMad = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        gate1Mad = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        gate2Mad = new javax.swing.JTextField();
        gate4Mad = new javax.swing.JTextField();
        gate5Mad = new javax.swing.JTextField();
        gate6Mad = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        gate3Mad = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        rodajeMad = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        pista1Mad = new javax.swing.JTextField();
        pista2Mad = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        pista3Mad = new javax.swing.JTextField();
        pista4Mad = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        tallerMad = new javax.swing.JTextField();
        fondoMad = new javax.swing.JLabel();
        jPanelBarcelona = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cajaTransfersAeropBar = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cajaTransfersCiudadBar = new javax.swing.JTextArea();
        numPasajBar = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        hangarBar = new javax.swing.JTextArea();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        areaEstBar = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        gate1Bar = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        gate2Bar = new javax.swing.JTextField();
        gate4Bar = new javax.swing.JTextField();
        gate5Bar = new javax.swing.JTextField();
        gate6Bar = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        gate3Bar = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        rodajeBar = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        pista1Bar = new javax.swing.JTextField();
        pista2Bar = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        pista3Bar = new javax.swing.JTextField();
        pista4Bar = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        tallerBar = new javax.swing.JTextField();
        fondoBar = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        aeroviaMadBar = new javax.swing.JTextField();
        aeroviaBarMad = new javax.swing.JTextField();
        imagenFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1350, 800));
        setMinimumSize(new java.awt.Dimension(1350, 800));
        setPreferredSize(new java.awt.Dimension(1350, 800));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Aerocomp");
        titulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 10, 300, 31));

        jPanelMadrid.setOpaque(false);
        jPanelMadrid.setPreferredSize(new java.awt.Dimension(960, 500));
        jPanelMadrid.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("MADRID");
        jPanelMadrid.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Transfers Aeropuerto");
        jPanelMadrid.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        cajaTransfersAeropMad.setEditable(false);
        cajaTransfersAeropMad.setColumns(20);
        cajaTransfersAeropMad.setLineWrap(true);
        cajaTransfersAeropMad.setRows(5);
        jScrollPane1.setViewportView(cajaTransfersAeropMad);

        jPanelMadrid.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 250, 60));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Transfers Ciudad");
        jPanelMadrid.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, -1, -1));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        cajaTransfersCiudadMad.setEditable(false);
        cajaTransfersCiudadMad.setColumns(20);
        cajaTransfersCiudadMad.setRows(5);
        jScrollPane2.setViewportView(cajaTransfersCiudadMad);

        jPanelMadrid.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 80, 250, 60));

        numPasajMad.setEditable(false);
        numPasajMad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numPasajMadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(numPasajMad, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 90, -1));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("nÂº de Pasajeros en el Aeropuerto");
        jPanelMadrid.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, -1, -1));

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        hangarMad.setEditable(false);
        hangarMad.setColumns(20);
        hangarMad.setRows(5);
        jScrollPane7.setViewportView(hangarMad);

        jPanelMadrid.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 260, 40));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Hangar");
        jPanelMadrid.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, -1, -1));

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        areaEstMad.setEditable(false);
        areaEstMad.setColumns(20);
        areaEstMad.setRows(5);
        jScrollPane5.setViewportView(areaEstMad);

        jPanelMadrid.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, 260, 40));

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Area Estacionamiento");
        jPanelMadrid.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, -1, -1));

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Gate 1");
        jPanelMadrid.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        gate1Mad.setEditable(false);
        gate1Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate1MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(gate1Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 90, -1));

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Gate 2");
        jPanelMadrid.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        gate2Mad.setEditable(false);
        gate2Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate2MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(gate2Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 90, -1));

        gate4Mad.setEditable(false);
        gate4Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate4MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(gate4Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 90, -1));

        gate5Mad.setEditable(false);
        gate5Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate5MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(gate5Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, 90, -1));

        gate6Mad.setEditable(false);
        gate6Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate6MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(gate6Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, 90, -1));

        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Gate 6");
        jPanelMadrid.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, -1, -1));

        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Gate 5");
        jPanelMadrid.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 430, -1, -1));

        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Gate 4");
        jPanelMadrid.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, -1, -1));

        gate3Mad.setEditable(false);
        gate3Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate3MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(gate3Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, 90, -1));

        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Gate 3");
        jPanelMadrid.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        rodajeMad.setEditable(false);
        rodajeMad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rodajeMadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(rodajeMad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 460, -1));

        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Area Rodaje");
        jPanelMadrid.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Pista 1");
        jPanelMadrid.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 410, -1, -1));

        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Pista 2");
        jPanelMadrid.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, -1, -1));

        pista1Mad.setEditable(false);
        pista1Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista1MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(pista1Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 410, 90, -1));

        pista2Mad.setEditable(false);
        pista2Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista2MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(pista2Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, 90, -1));

        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Pista 3");
        jPanelMadrid.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, -1, -1));

        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Pista 4");
        jPanelMadrid.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, -1, -1));

        pista3Mad.setEditable(false);
        pista3Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista3MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(pista3Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 90, -1));

        pista4Mad.setEditable(false);
        pista4Mad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista4MadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(pista4Mad, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, 90, -1));

        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Taller");
        jPanelMadrid.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, -1, -1));

        tallerMad.setEditable(false);
        tallerMad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tallerMadActionPerformed(evt);
            }
        });
        jPanelMadrid.add(tallerMad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 550, 460, -1));

        fondoMad.setIcon(new javax.swing.ImageIcon("media/fondogris.png"));
        jPanelMadrid.add(fondoMad, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 600));

        getContentPane().add(jPanelMadrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 50, 650, 600));

        jPanelBarcelona.setOpaque(false);
        jPanelBarcelona.setPreferredSize(new java.awt.Dimension(960, 500));
        jPanelBarcelona.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("BARCELONA");
        jPanelBarcelona.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Transfers Aeropuerto");
        jPanelBarcelona.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        cajaTransfersAeropBar.setEditable(false);
        cajaTransfersAeropBar.setColumns(20);
        cajaTransfersAeropBar.setLineWrap(true);
        cajaTransfersAeropBar.setRows(5);
        jScrollPane3.setViewportView(cajaTransfersAeropBar);

        jPanelBarcelona.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 250, 60));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Transfers Ciudad");
        jPanelBarcelona.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, -1, -1));

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        cajaTransfersCiudadBar.setEditable(false);
        cajaTransfersCiudadBar.setColumns(20);
        cajaTransfersCiudadBar.setRows(5);
        jScrollPane4.setViewportView(cajaTransfersCiudadBar);

        jPanelBarcelona.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 80, 250, 60));

        numPasajBar.setEditable(false);
        numPasajBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numPasajBarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(numPasajBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 90, -1));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("nÂº de Pasajeros en el Aeropuerto");
        jPanelBarcelona.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, -1, -1));

        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        hangarBar.setEditable(false);
        hangarBar.setColumns(20);
        hangarBar.setRows(5);
        jScrollPane8.setViewportView(hangarBar);

        jPanelBarcelona.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 260, 40));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Hangar");
        jPanelBarcelona.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, -1, -1));

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        areaEstBar.setEditable(false);
        areaEstBar.setColumns(20);
        areaEstBar.setRows(5);
        jScrollPane6.setViewportView(areaEstBar);

        jPanelBarcelona.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, 260, 40));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Area Estacionamiento");
        jPanelBarcelona.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, -1, -1));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Gate 1");
        jPanelBarcelona.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        gate1Bar.setEditable(false);
        gate1Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate1BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(gate1Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 90, -1));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("Gate 2");
        jPanelBarcelona.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        gate2Bar.setEditable(false);
        gate2Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate2BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(gate2Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 90, -1));

        gate4Bar.setEditable(false);
        gate4Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate4BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(gate4Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 90, -1));

        gate5Bar.setEditable(false);
        gate5Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate5BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(gate5Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, 90, -1));

        gate6Bar.setEditable(false);
        gate6Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate6BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(gate6Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, 90, -1));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Gate 6");
        jPanelBarcelona.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, -1, -1));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("Gate 5");
        jPanelBarcelona.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 430, -1, -1));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Gate 4");
        jPanelBarcelona.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, -1, -1));

        gate3Bar.setEditable(false);
        gate3Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gate3BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(gate3Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, 90, -1));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setText("Gate 3");
        jPanelBarcelona.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        rodajeBar.setEditable(false);
        rodajeBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rodajeBarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(rodajeBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 460, -1));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Area Rodaje");
        jPanelBarcelona.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Pista 1");
        jPanelBarcelona.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 410, -1, -1));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Pista 2");
        jPanelBarcelona.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, -1, -1));

        pista1Bar.setEditable(false);
        pista1Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista1BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(pista1Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 410, 90, -1));

        pista2Bar.setEditable(false);
        pista2Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista2BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(pista2Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, 90, -1));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Pista 3");
        jPanelBarcelona.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, -1, -1));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setText("Pista 4");
        jPanelBarcelona.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, -1, -1));

        pista3Bar.setEditable(false);
        pista3Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista3BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(pista3Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 90, -1));

        pista4Bar.setEditable(false);
        pista4Bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pista4BarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(pista4Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, 90, -1));

        jLabel39.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 0, 0));
        jLabel39.setText("Taller");
        jPanelBarcelona.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, -1, -1));

        tallerBar.setEditable(false);
        tallerBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tallerBarActionPerformed(evt);
            }
        });
        jPanelBarcelona.add(tallerBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 550, 460, -1));

        fondoBar.setIcon(new javax.swing.ImageIcon("media/fondogris.png"));
        jPanelBarcelona.add(fondoBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 600));

        getContentPane().add(jPanelBarcelona, new org.netbeans.lib.awtextra.AbsoluteConstraints(685, 50, 650, 600));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Aerovia Madrid-Barcelona");
        jLabel21.setOpaque(true);
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 660, -1, -1));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Aerovia Barcelona-Madrid");
        jLabel22.setOpaque(true);
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 710, -1, -1));

        aeroviaMadBar.setEditable(false);
        aeroviaMadBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aeroviaMadBarActionPerformed(evt);
            }
        });
        getContentPane().add(aeroviaMadBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 680, 818, -1));

        aeroviaBarMad.setEditable(false);
        aeroviaBarMad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aeroviaBarMadActionPerformed(evt);
            }
        });
        getContentPane().add(aeroviaBarMad, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 730, 818, -1));

        imagenFondo.setIcon(new javax.swing.ImageIcon("media/fondo.jpeg"));
        getContentPane().add(imagenFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gate1MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate1MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate1MadActionPerformed

    private void gate2MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate2MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate2MadActionPerformed

    private void gate3MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate3MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate3MadActionPerformed

    private void gate5MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate5MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate5MadActionPerformed

    private void gate6MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate6MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate6MadActionPerformed

    private void rodajeMadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rodajeMadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rodajeMadActionPerformed

    private void gate4MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate4MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate4MadActionPerformed

    private void pista3MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista3MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista3MadActionPerformed

    private void pista1MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista1MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista1MadActionPerformed

    private void pista4MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista4MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista4MadActionPerformed

    private void pista2MadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista2MadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista2MadActionPerformed

    private void aeroviaMadBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aeroviaMadBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aeroviaMadBarActionPerformed

    private void aeroviaBarMadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aeroviaBarMadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aeroviaBarMadActionPerformed

    private void tallerMadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tallerMadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tallerMadActionPerformed

    private void numPasajMadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numPasajMadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numPasajMadActionPerformed

    private void numPasajBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numPasajBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numPasajBarActionPerformed

    private void gate1BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate1BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate1BarActionPerformed

    private void gate2BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate2BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate2BarActionPerformed

    private void gate4BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate4BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate4BarActionPerformed

    private void gate5BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate5BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate5BarActionPerformed

    private void gate6BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate6BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate6BarActionPerformed

    private void gate3BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gate3BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gate3BarActionPerformed

    private void rodajeBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rodajeBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rodajeBarActionPerformed

    private void pista1BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista1BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista1BarActionPerformed

    private void pista2BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista2BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista2BarActionPerformed

    private void pista3BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista3BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista3BarActionPerformed

    private void pista4BarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pista4BarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pista4BarActionPerformed

    private void tallerBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tallerBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tallerBarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AerocompInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AerocompInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AerocompInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AerocompInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AerocompInterfaz().setVisible(true);
                } catch (InterruptedException ex) {
                    System.out.println("error");
                }

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aeroviaBarMad;
    private javax.swing.JTextField aeroviaMadBar;
    private javax.swing.JTextArea areaEstBar;
    private javax.swing.JTextArea areaEstMad;
    private javax.swing.JTextArea cajaTransfersAeropBar;
    private javax.swing.JTextArea cajaTransfersAeropMad;
    private javax.swing.JTextArea cajaTransfersCiudadBar;
    private javax.swing.JTextArea cajaTransfersCiudadMad;
    private javax.swing.JLabel fondoBar;
    private javax.swing.JLabel fondoMad;
    private javax.swing.JTextField gate1Bar;
    private javax.swing.JTextField gate1Mad;
    private javax.swing.JTextField gate2Bar;
    private javax.swing.JTextField gate2Mad;
    private javax.swing.JTextField gate3Bar;
    private javax.swing.JTextField gate3Mad;
    private javax.swing.JTextField gate4Bar;
    private javax.swing.JTextField gate4Mad;
    private javax.swing.JTextField gate5Bar;
    private javax.swing.JTextField gate5Mad;
    private javax.swing.JTextField gate6Bar;
    private javax.swing.JTextField gate6Mad;
    private javax.swing.JTextArea hangarBar;
    private javax.swing.JTextArea hangarMad;
    private javax.swing.JLabel imagenFondo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelBarcelona;
    private javax.swing.JPanel jPanelMadrid;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField numPasajBar;
    private javax.swing.JTextField numPasajMad;
    private javax.swing.JTextField pista1Bar;
    private javax.swing.JTextField pista1Mad;
    private javax.swing.JTextField pista2Bar;
    private javax.swing.JTextField pista2Mad;
    private javax.swing.JTextField pista3Bar;
    private javax.swing.JTextField pista3Mad;
    private javax.swing.JTextField pista4Bar;
    private javax.swing.JTextField pista4Mad;
    private javax.swing.JTextField rodajeBar;
    private javax.swing.JTextField rodajeMad;
    private javax.swing.JTextField tallerBar;
    private javax.swing.JTextField tallerMad;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables

//Meter 1 si se quiere meter, 0 si no
    public void actualizarTransfersAeropuerto(String ciudad, String idBus, boolean meter) {
        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (cajaTransfersAeropMad) {
                String texto = cajaTransfersAeropMad.getText();
                if (meter) {
                    texto += idBus + " ";
                } else {
                    texto = texto.replace(idBus + " ", "");
                }
                cajaTransfersAeropMad.setText(texto);
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (cajaTransfersAeropBar) {
                String texto = cajaTransfersAeropBar.getText();
                if (meter) {
                    texto += idBus + " ";
                } else {
                    texto = texto.replace(idBus + " ", "");
                }
                cajaTransfersAeropBar.setText(texto);
            }
        }
    }

    public void actualizarTransfersCiudad(String ciudad, String idBus, boolean meter) {
        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (cajaTransfersCiudadMad) {
                String texto = cajaTransfersCiudadMad.getText();
                if (meter) {
                    texto +=idBus + " ";
                } else {
                    texto = texto.replace(idBus + " ", "");
                }
                cajaTransfersCiudadMad.setText(texto);
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (cajaTransfersCiudadBar) {
                String texto = cajaTransfersCiudadBar.getText();
                if (meter) {
                    texto +=idBus  + " ";
                } else {
                    texto = texto.replace(idBus + " ", "");
                }
                cajaTransfersCiudadBar.setText(texto);
            }
        }
    }

    public void actualizarPersonasAeropuerto(String ciudad, int personas) {
        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (cajaTransfersCiudadMad) {
                numPasajMad.setText(String.valueOf(personas));
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (cajaTransfersCiudadBar) {
                numPasajBar.setText(String.valueOf(personas));
            }
        }
    }

    public void actualizarHangar(String ciudad, String id, boolean meter) {

        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (hangarMad) {
                String texto = hangarMad.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                hangarMad.setText(texto);
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (hangarBar) {
                String texto = hangarBar.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                hangarBar.setText(texto);
            }
        }
    }

    public void actualizarAreaEstacionamiento(String ciudad, String id, boolean meter) {
        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (areaEstMad) {
                String texto = areaEstMad.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                areaEstMad.setText(texto);
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (areaEstBar) {
                String texto = areaEstBar.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                areaEstBar.setText(texto);
            }
        }
    }

    public void actualizarAreaRodaje(String ciudad, String id, boolean meter) {
        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (rodajeMad) {
                String texto = rodajeMad.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                rodajeMad.setText(texto);
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (rodajeBar) {
                String texto = rodajeBar.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                rodajeBar.setText(texto);
            }
        }
    }

    public void actualizarTaller(String ciudad, String id, boolean meter) {
        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (tallerMad) {
                String texto = tallerMad.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                tallerMad.setText(texto);
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (tallerBar) {
                String texto = tallerBar.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                tallerBar.setText(texto);
            }
        }
    }
    
    public void actualizarAerovia(String ciudad, String id, boolean meter) {
        //Cambiar caja de madrid
        if (ciudad.equals("Madrid")) {
            synchronized (aeroviaMadBar) {
                String texto = aeroviaMadBar.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                aeroviaMadBar.setText(texto);
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            synchronized (aeroviaBarMad) {
                String texto = aeroviaBarMad.getText();
                if (meter) {
                    texto +=id + " ";
                } else {
                    texto = texto.replace(id + " ", "");
                }
                aeroviaBarMad.setText(texto);
            }
        }
    }

    public void actualizarPuerta(String ciudad, String id, boolean meter, boolean embarque, int puerta) {
        //Cambiar caja de madrid
        String texto = meter ? (embarque ? "EMB: " : "DES: ") + id : "";
        if (ciudad.equals("Madrid")) {
            switch (puerta) {
                case 0 -> {
                    synchronized (gate1Mad) {
                        gate1Mad.setText(texto);
                    }
                }
                case 1 -> {
                    synchronized (gate2Mad) {
                        gate2Mad.setText(texto);
                    }
                }
                case 2 -> {
                    synchronized (gate3Mad) {
                        gate3Mad.setText(texto);
                    }
                }
                case 3 -> {
                    synchronized (gate4Mad) {
                        gate4Mad.setText(texto);
                    }
                }
                case 4 -> {
                    synchronized (gate5Mad) {
                        gate5Mad.setText(texto);
                    }
                }
                case 5 -> {
                    synchronized (gate6Mad) {
                        gate6Mad.setText(texto);
                    }
                }
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            switch (puerta) {
                case 0 -> {
                    synchronized (gate1Bar) {
                        gate1Bar.setText(texto);
                    }
                }
                case 1 -> {
                    synchronized (gate2Bar) {
                        gate2Bar.setText(texto);
                    }
                }
                case 2 -> {
                    synchronized (gate3Bar) {
                        gate3Bar.setText(texto);
                    }
                }
                case 3 -> {
                    synchronized (gate4Bar) {
                        gate4Bar.setText(texto);
                    }
                }
                case 4 -> {
                    synchronized (gate5Bar) {
                        gate5Bar.setText(texto);
                    }
                }
                case 5 -> {
                    synchronized (gate6Bar) {
                        gate6Mad.setText(texto);
                    }
                }
            }
        }
    }
    
    public void actualizarPista(String ciudad, String id, boolean meter, boolean despegue, int pista) {
        //Cambiar caja de madrid
        String texto = meter ? (despegue ? "DESP: " : "ATER: ") + id : "";
        if (ciudad.equals("Madrid")) {
            switch (pista) {
                case 0 -> {
                    synchronized (pista1Mad) {
                        pista1Mad.setText(texto);
                    }
                }
                case 1 -> {
                    synchronized (pista2Mad) {
                        pista2Mad.setText(texto);
                    }
                }
                case 2 -> {
                    synchronized (pista3Mad) {
                        pista3Mad.setText(texto);
                    }
                }
                case 3 -> {
                    synchronized (pista4Mad) {
                        pista4Mad.setText(texto);
                    }
                }
            }

        } //Cambiar caja de barcelona
        else if (ciudad.equals("Barcelona")) {
            switch (pista) {
                case 0 -> {
                    synchronized (pista1Bar) {
                        pista1Bar.setText(texto);
                    }
                }
                case 1 -> {
                    synchronized (pista2Bar) {
                        pista2Bar.setText(texto);
                    }
                }
                case 2 -> {
                    synchronized (pista3Bar) {
                        pista3Bar.setText(texto);
                    }
                }
                case 3 -> {
                    synchronized (pista4Bar) {
                        pista4Bar.setText(texto);
                    }
                }
            }
        }
    }
}
